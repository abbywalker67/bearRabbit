<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rabbit &amp; Bear</title>
  
  
  <link href="https://unclevicky.github.io/rabbitBear/atom.xml" rel="self"/>
  
  <link href="https://unclevicky.github.io/rabbitBear/"/>
  <updated>2021-02-07T04:00:06.719Z</updated>
  <id>https://unclevicky.github.io/rabbitBear/</id>
  
  <author>
    <name>bear</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo博客基础环境搭建（非常详细）</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-07T02:36:33.000Z</published>
    <updated>2021-02-07T04:00:06.719Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【背景】"><a href="#【背景】" class="headerlink" title="【背景】"></a><strong>【背景】</strong></h3><p style="text-indent:2em">我是一名学财务的文科生，没有任何计算机基础，但是喜欢写文章，之前都是在微信公众号上写，但是有诸多限制，于是萌生了想搭建一个自己的博客的念头。我把我的想法告诉了我的一个朋友（姑且成他为X君吧），X君帮我搭建了一个网站，并把过程将给我听。我根据X君的教程，自己也把环境搭建起来了。在这里做一个记录。算是在新博客网站中的第一篇文章吧。</p><h3 id="【目标】"><a href="#【目标】" class="headerlink" title="【目标】"></a><strong>【目标】</strong></h3><ol><li>使用nodejs的hexo搭建本地博客系统</li><li>使用git进行版本管理（和小伙伴们协同工作的必备良兔（tool））</li><li>使用github进行代码托管（X君告诉我自己写的东西可以上传到这个网站，可以当作一个本地的备份，也可以随时随地工作，但是要注意隐私问题）</li><li>使用github Page作为博客网站的访问（X君说这是一个免费的个人网页托管服务器，不是很懂，反正就是能通过他自定义并访问自己的文章）</li></ol><h3 id="【小白科普】"><a href="#【小白科普】" class="headerlink" title="【小白科普】"></a><strong>【小白科普】</strong></h3><ol><li><strong>运行环境</strong><ul><li>任何软件的运行都需要环境，比如win10需要在笔记本电脑上运行，andriod需要在手机上运行；笔记本电脑和手机就是win0和android这俩软件的运行环境</li><li>操作系统是一个特殊的软件，他们为其他软件的运行提供环境，比如QQ、微信都需要安装在win10、ios或android操作系统上才能运行，只不过他们要求的格式不一样，win10可以运行exe软件，ios可以运行dmg文件，andriod运行pkg文件等。</li><li>针对那些没有可视化交互界面的软件，操作系统会给他们提供一个特殊的运行环境。比如win10的cmd运行环境，mac的bash环境，androi也有只不过我们在手机上不常用。（不太好理解，但是可以类比win10需要笔记本电脑提供环境，QQ需要win10操作系统提供环境，python等没有界面的软件需要cmd提供环境一样类比着理解）</li><li>python、nodejs、mysql等这些都是没有可视化交互界面的软件，所以需要我们在cmd或者bash中运行（X君说python和nodejs也有图形交互界面，但是为了让我更好的理解这些概念，所以就不推荐我使用）</li></ul></li><li><strong>环境变量</strong><ul><li>上面提到了运行环境，但是我按X君的教程搭建环境的时候，经常<strong>提示某某文件后文件夹找不见</strong>，于是X君又给我普及了<strong>环境变量</strong>的概念。</li><li>当我们使用cmd或bash运行一个软件时，会以以下顺序<ul><li>首先会在<strong>当前目录</strong>中寻找是否有该软件（例如python.exe）；</li><li>如果没有则会在<strong>当前用户的PATH环境变量指定的所有目录中按先后顺序循环寻找</strong>，如果找到了就直接运行，不再往下找。这个PATH就是一个环境变量（可以理解为一个字符串），存放了一堆的文件夹目录，win10是以“;”隔开，mac是以“：”隔开，大概长下面这个样子。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/abbywalker/opt/anaconda3/bin:/Users/abbywalker/opt/anaconda3/condabin:/Library/Frameworks/Python.framework/Versions/3.8/bin:/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/<span class="built_in">local</span>/mysql/bin</span><br></pre></td></tr></table></figure></li><li>如果还没有则会继续在<strong>系统的PATH环境变量指定的所有目录中按先后顺序循环寻找</strong></li><li>如果还是找不到，就会报错<strong>提示某某文件后文件夹找不见</strong></li></ul></li></ul></li><li><strong>运行软件的5个方法</strong><ul><li>根据上面环境变量的介绍，运行软件可以有5种方法</li><li>直接到该软件的安装目录下运行 （对应于环境变量中的<strong>当前目录</strong>）</li><li>把该软件的安装目录加入到<strong>该用户的PATH变量</strong>中（具体方法后面讲）</li><li>在当前运行的cmd或bash中临时指定，而不影响其他的程序运行（X君建议使用这种方法，这样可以同一个电脑安装多版本的软件，比如同时安装python2.7和3.7，通过这种方法临时指定当前运行的环境而不影响其他程序）（具体方法后面讲）</li><li>把该软件的安装目录加入到<strong>系统的PATH变量</strong>中（具体方法后面讲）</li><li>直接指定该软件安装目录的绝对路径进行执行，例如:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;/usr/<span class="built_in">local</span>/mysql/bin/python <span class="comment">#mac的bash环境</span></span><br><span class="line">&gt;d:\soft\pytthon\python.exe <span class="comment">#win10的cmd环境</span></span><br></pre></td></tr></table></figure><p style="text-indent:2em">好了，小白科普到此结束，下面进入本文正题</p></li></ul></li></ol><h3 id="【环境准备】"><a href="#【环境准备】" class="headerlink" title="【环境准备】"></a><strong>【环境准备】</strong></h3><ol><li>安装git</li><li>安装nodejs</li><li>安装hexo</li><li>github搭建个人仓库</li><li><strong>github设置多Page</strong>（默认一个账户只能有一个主页Page）</li><li>生产SSH并添加到github</li><li>将hexo发布到github</li><li>页面访问（本地预览和公网访问）<p style="text-indent:2em">PS：X君用的是windows，我用的是mac所以教程会写两份。</p></li></ol><h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a><strong>安装git</strong></h4><ol><li>windows的比较简单，直接下载软件，一路下一步即可；</li><li>mac上安装稍微复杂一点，安装过程记录以下；</li></ol><h4 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a><strong>安装nodejs</strong></h4><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a><strong>安装hexo</strong></h4><h4 id="github搭建个人仓库"><a href="#github搭建个人仓库" class="headerlink" title="github搭建个人仓库"></a><strong>github搭建个人仓库</strong></h4><h4 id="github设置多Page"><a href="#github设置多Page" class="headerlink" title="github设置多Page"></a><strong>github设置多Page</strong></h4><h4 id="生产SSH并添加到github"><a href="#生产SSH并添加到github" class="headerlink" title="生产SSH并添加到github"></a><strong>生产SSH并添加到github</strong></h4><h4 id="将hexo发布到github"><a href="#将hexo发布到github" class="headerlink" title="将hexo发布到github"></a><strong>将hexo发布到github</strong></h4><h4 id="页面访问（本地预览和公网访问）"><a href="#页面访问（本地预览和公网访问）" class="headerlink" title="页面访问（本地预览和公网访问）"></a><strong>页面访问（本地预览和公网访问）</strong></h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;【背景】&quot;&gt;&lt;a href=&quot;#【背景】&quot; class=&quot;headerlink&quot; title=&quot;【背景】&quot;&gt;&lt;/a&gt;&lt;strong&gt;【背景】&lt;/strong&gt;&lt;/h3&gt;&lt;p style=&quot;text-indent:2em&quot;&gt;
我是一名学财务的文科生，没有任何计算机基</summary>
      
    
    
    
    <category term="基础教程" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    <category term="环境搭建" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://unclevicky.github.io/rabbitBear/tags/hexo/"/>
    
    <category term="github" scheme="https://unclevicky.github.io/rabbitBear/tags/github/"/>
    
    <category term="博客" scheme="https://unclevicky.github.io/rabbitBear/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>【量化投资】05.读取csv文件保存到mysql数据库</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/03/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%845/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/03/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%845/</id>
    <published>2021-02-03T15:01:56.000Z</published>
    <updated>2021-02-03T15:31:44.415Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【老博客地址】"><a href="#【老博客地址】" class="headerlink" title="【老博客地址】"></a><strong>【老博客地址】</strong></h3><p>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/">【CSDN】博客主页</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111321871">【量化投资】00.资源篇——持续更新</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111300459">【量化投资】01.基本概念</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111326137">【量化投资】02.数据接口初探——excel读取新浪股票api数据</a><br>&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111472606">【量化投资】03.量化工程abu学习之量化基础（1/3）</a></p><h3 id="【目标】"><a href="#【目标】" class="headerlink" title="【目标】"></a><strong>【目标】</strong></h3><p>&emsp;&emsp;接上文，将<a href="https://unclevicky.github.io/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/">【量化投资】04.使用python爬取股票基础数据</a>中爬取的数据保存到mysql数据库中</p><h3 id="【最终效果】"><a href="#【最终效果】" class="headerlink" title="【最终效果】"></a><strong>【最终效果】</strong></h3><img src="/rabbitBear/2021/02/03/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%845/ts_stock_basics.png" class title="股票列表数据库Navicat截图"><h3 id="【准备工作】"><a href="#【准备工作】" class="headerlink" title="【准备工作】"></a><strong>【准备工作】</strong></h3><ul><li>安装mysql数据库（本地或docker方式都可以）</li><li>安装python操作mysql所需要的包<ul><li><code>pip install pymysql</code></li></ul></li><li>（选）安装Navicat客户端，用以查询数据库</li></ul><h3 id="【创建mysql数据库表】"><a href="#【创建mysql数据库表】" class="headerlink" title="【创建mysql数据库表】"></a><strong>【创建mysql数据库表】</strong></h3> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ts_stock_basics(code <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;代码&#x27;</span>,name <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;名称&#x27;</span>,industry <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;所属行业&#x27;</span>,area <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;地区&#x27;</span>,pe <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;市盈率&#x27;</span>,outstanding <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;流通股本(亿)&#x27;</span>,totals <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;总股本(亿)&#x27;</span>,totalAssets <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;总资产(万)&#x27;</span>,liquidAssets <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;流动资产&#x27;</span>,fixedAssets <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;固定资产&#x27;</span>,reserved <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;公积金&#x27;</span>,reservedPerShare <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股公积金&#x27;</span>,esp <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股收益&#x27;</span>,bvps <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股净资&#x27;</span>,pb <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;市净率&#x27;</span>,timeToMarket <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;上市日期&#x27;</span>,undp <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;未分利润&#x27;</span>,perundp <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股未分配&#x27;</span>,rev <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;收入同比(%)&#x27;</span>,profit <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;利润同比(%)&#x27;</span>,gpr <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;毛利率(%)&#x27;</span>,npr <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;净利润率(%)&#x27;</span>,holders <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;股东人数&#x27;</span>,<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (code) ) COMMENT<span class="operator">=</span><span class="string">&#x27;股票列表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="【完整代码：读取csv文件，并插入到数据库】"><a href="#【完整代码：读取csv文件，并插入到数据库】" class="headerlink" title="【完整代码：读取csv文件，并插入到数据库】"></a><strong>【完整代码：读取csv文件，并插入到数据库】</strong></h3><p><strong>【重要】需要更改自己的数据库地址、用户名和密码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">MYSQL_HOST=<span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">MYSQL_USER=<span class="string">&#x27;root&#x27;</span></span><br><span class="line">MYSQL_PWD=<span class="string">&#x27;mariadb&#x27;</span></span><br><span class="line">MYSQL_DB=<span class="string">&#x27;stock_data&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立数据连接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conn</span>():</span></span><br><span class="line">    db = pymysql.connect(MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, port=<span class="number">3306</span>, charset=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> db</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertTSB</span>():</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 读取csv文件</span></span><br><span class="line">    file = <span class="built_in">open</span>(<span class="string">&#x27;stock_info.csv&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    fileReader = csv.reader(file)</span><br><span class="line">    filedata = <span class="built_in">list</span>(fileReader) </span><br><span class="line">    db = conn()</span><br><span class="line">    c = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 有些为空的数据，csv自动变为-, 需要处理掉， 否则插入数据库会报错</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> filedata:</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(row)):</span><br><span class="line">            <span class="keyword">if</span> row[_] == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                row[_]=<span class="string">&#x27;\&#x27;\&#x27;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i,val <span class="keyword">in</span> <span class="built_in">enumerate</span>(filedata):</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0</span>: <span class="comment"># 跳过文件头</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># 组装插入语句</span></span><br><span class="line">        <span class="comment"># 股票代码 股票名称 行业 地区 pe 流通股本 总股本 总资产 流动资产 上市时间 每股未分配利润 利润同比 净利润率</span></span><br><span class="line">        sql = <span class="string">&quot;INSERT INTO ts_stock_basics(code, name, industry, area, pe, \</span></span><br><span class="line"><span class="string">        outstanding, totals, totalAssets, liquidAssets, timeToMarket, perundp, profit, npr) \</span></span><br><span class="line"><span class="string">       VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s )&quot;</span> % \</span><br><span class="line">       (<span class="built_in">str</span>(val[<span class="number">0</span>]).zfill(<span class="number">6</span>), <span class="string">&#x27;\&#x27;&#x27;</span>+val[<span class="number">1</span>]+<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>+val[<span class="number">20</span>]+<span class="string">&#x27;\&#x27;&#x27;</span>,  <span class="string">&#x27;\&#x27;&#x27;</span>+val[<span class="number">21</span>]+<span class="string">&#x27;\&#x27;&#x27;</span>, val[<span class="number">22</span>], val[<span class="number">15</span>], val[<span class="number">14</span>], val[<span class="number">18</span>], val[<span class="number">19</span>], val[<span class="number">29</span>], val[<span class="number">30</span>], val[<span class="number">26</span>], val[<span class="number">27</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 执行语句</span></span><br><span class="line">            c.execute(sql)</span><br><span class="line">            <span class="comment"># 提交</span></span><br><span class="line">            db.commit()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="comment"># 如果出错，把错误语句打印出来，方便分析</span></span><br><span class="line">            print(sql)</span><br><span class="line">            <span class="comment"># 如果出错需要回滚</span></span><br><span class="line">            db.rollback()</span><br><span class="line">    <span class="comment"># 一定不要忘了关闭数据库连接</span></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有数据    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteTSB</span>():</span></span><br><span class="line">    db = conn()</span><br><span class="line">    <span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># SQL 删除语句</span></span><br><span class="line">    sql = <span class="string">&quot;DELETE FROM ts_stock_basics WHERE 1=1 &quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">       <span class="comment"># 执行SQL语句</span></span><br><span class="line">       cursor.execute(sql)</span><br><span class="line">       <span class="comment"># 提交修改</span></span><br><span class="line">       db.commit()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">       <span class="comment"># 发生错误时回滚</span></span><br><span class="line">       db.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    db.close()</span><br><span class="line">    </span><br><span class="line"><span class="comment">#deleteTSB() # 如果需要重新插入，用此方法删除数据库表内容</span></span><br><span class="line">insertTSB()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;【老博客地址】&quot;&gt;&lt;a href=&quot;#【老博客地址】&quot; class=&quot;headerlink&quot; title=&quot;【老博客地址】&quot;&gt;&lt;/a&gt;&lt;strong&gt;【老博客地址】&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://blog</summary>
      
    
    
    
    <category term="财富" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="技术工具" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="基础教程" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="数据获取" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="技术" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="python" scheme="https://unclevicky.github.io/rabbitBear/tags/python/"/>
    
    <category term="mysql" scheme="https://unclevicky.github.io/rabbitBear/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【量化投资】04.使用python爬取股票基础数据</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/</id>
    <published>2021-02-01T13:34:02.000Z</published>
    <updated>2021-02-02T09:18:38.046Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【老博客地址】"><a href="#【老博客地址】" class="headerlink" title="【老博客地址】"></a><strong>【老博客地址】</strong></h3><p>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/">【CSDN】博客主页</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111321871">【量化投资】00.资源篇——持续更新</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111300459">【量化投资】01.基本概念</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111326137">【量化投资】02.数据接口初探——excel读取新浪股票api数据</a><br>&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111472606">【量化投资】03.量化工程abu学习之量化基础（1/3）</a></p><h3 id="【背景】"><a href="#【背景】" class="headerlink" title="【背景】"></a><strong>【背景】</strong></h3><p style="text-indent:2em">之前的文章里推荐了好几个量化投资程序获取数据的方法，但是后来发现大多都有了限制，包括某share都得用积分才能使用，积分的获取非常麻烦。求人不如靠己！所以就开始自己一点点的自己想办法获取数据，并存储到本地。</p><p style="text-indent:2em">本次的目标是从东方财富的官网页面上抓取股票的基本数据，内容如下:</p><ul><li>本期<ul><li>获取A股所有的股票列表和一些基本信息，并保存到cvs文件</li><li>获取各股票的一些详细信息，并保存到csv文件</li></ul></li><li>计划<ul><li>后续将数据进行结构化保存到数据库</li><li>后续改成多线程获取，加速爬取数据</li></ul></li></ul><h3 id="【最终效果】"><a href="#【最终效果】" class="headerlink" title="【最终效果】"></a><strong>【最终效果】</strong></h3><br><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_list_web.png" class title="股票清单和基本信息-网页"><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_list_csv.png" class title="股票清单和基本信息-csv"><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_info_web.png" class title="股票详细信息-网页"><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_info_csv.png" class title="股票详细信息-csv"><h3 id="【代码】"><a href="#【代码】" class="headerlink" title="【代码】"></a><strong>【代码】</strong></h3><h4 id="获取所有A股股票清单"><a href="#获取所有A股股票清单" class="headerlink" title="获取所有A股股票清单"></a><strong>获取所有A股股票清单</strong></h4><h5 id="☆完整代码"><a href="#☆完整代码" class="headerlink" title="☆完整代码"></a><strong>☆完整代码</strong></h5><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;html.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(requests.get(url).text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 股票信息主页</span></span><br><span class="line"><span class="comment"># http://quote.eastmoney.com/center/gridlist.html#hs_a_board</span></span><br><span class="line"><span class="comment"># 沪深A股列表真实链接</span></span><br><span class="line">url = <span class="string">&quot;http://11.push2.eastmoney.com/api/qt/clist/get?cb=jQuery112405084455909086425_1610764452571&amp;pn=1&amp;pz=4400&amp;po=1&amp;np=1&amp;ut=bd1d9ddb04089700cf9c27f6f7426281&amp;fltt=2&amp;invt=2&amp;fid=f3&amp;fs=m:0+t:6,m:0+t:13,m:0+t:80,m:1+t:2,m:1+t:23&amp;fields=f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152&amp;_=1610764452635&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>():</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;html.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        all_contents = f.read()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 正则表达式，获取股票列表信息json串</span></span><br><span class="line">    re_cont = re.findall(<span class="string">&#x27;\\((.*?)\\);&#x27;</span>,all_contents,re.S)</span><br><span class="line">    js_cont = json.loads(re_cont[<span class="number">0</span>])</span><br><span class="line">    stock_list=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> js_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;diff&#x27;</span>]:</span><br><span class="line">        <span class="comment">#_stock=&#123;&#125;</span></span><br><span class="line">        <span class="comment">#_stock[&#x27;code&#x27;]=i[&#x27;f12&#x27;]</span></span><br><span class="line">        <span class="comment">#_stock[&#x27;name&#x27;]=i[&#x27;f14&#x27;]</span></span><br><span class="line">        <span class="comment">#_stock[&#x27;new_price&#x27;]=i[&#x27;f2&#x27;]</span></span><br><span class="line">        conten=[]  <span class="comment"># 存放单只股票信息</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f12&#x27;</span>]) <span class="comment"># 股票代码</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f14&#x27;</span>]) <span class="comment"># 股票名称</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f2&#x27;</span>]) <span class="comment"># 最新价</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f3&#x27;</span>]) <span class="comment"># 涨跌幅</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f4&#x27;</span>]) <span class="comment"># 涨跌额</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f5&#x27;</span>]) <span class="comment"># 成交量（手）</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f6&#x27;</span>]) <span class="comment"># 成交额</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f7&#x27;</span>]) <span class="comment"># 振幅</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f15&#x27;</span>]) <span class="comment"># 最高</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f16&#x27;</span>]) <span class="comment"># 最低</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f17&#x27;</span>]) <span class="comment"># 今开</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f18&#x27;</span>]) <span class="comment"># 昨收</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f10&#x27;</span>]) <span class="comment"># 量比</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f8&#x27;</span>]) <span class="comment"># 换手率</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f9&#x27;</span>]) <span class="comment"># 市盈率（动态）</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f23&#x27;</span>]) <span class="comment"># 市净率</span></span><br><span class="line">        stock_list.append(conten)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;stock.csv&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 写入表头</span></span><br><span class="line">        n=<span class="number">0</span></span><br><span class="line">        single=(<span class="built_in">str</span>(n)+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;股票代码&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;股票名称&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;最新价&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;涨跌幅&#x27;</span>+<span class="string">&#x27;,&#x27;</span></span><br><span class="line">                +<span class="string">&#x27;涨跌额&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;成交量（手）&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;成交额（亿）&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;振幅&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;最高&#x27;</span>+<span class="string">&#x27;,&#x27;</span></span><br><span class="line">                +<span class="string">&#x27;最低&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;今开&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;昨收&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;量比&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;换手率&#x27;</span>+<span class="string">&#x27;,&#x27;</span></span><br><span class="line">                +<span class="string">&#x27;市盈率（动态）&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;市净率&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f.write(single)</span><br><span class="line">        <span class="comment"># 写入股票数据</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> stock_list:</span><br><span class="line">            n+=<span class="number">1</span></span><br><span class="line">            single = <span class="built_in">str</span>(n)</span><br><span class="line">            <span class="keyword">for</span> val <span class="keyword">in</span> _ :</span><br><span class="line">                single=single+<span class="string">&#x27;,&#x27;</span>+<span class="built_in">str</span>(val)</span><br><span class="line">            single=single+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">            f.write(single)</span><br><span class="line"></span><br><span class="line">get_html(url)</span><br><span class="line">read_file()</span><br></pre></td></tr></table></figure></code></pre><h5 id="☆代码解读"><a href="#☆代码解读" class="headerlink" title="☆代码解读"></a><strong>☆代码解读</strong></h5><ol><li>获取返回股票列表信息的<strong>真实连接</strong></li></ol><ul><li>打开东方财富的 <a href="http://quote.eastmoney.com/center/gridlist.html#hs_a_board">主页</a> ，获取返回值的html，查看源码，<strong>发现其页面里面没有股票信息</strong>,说明是通过生成页面框架，然后动态加载的。</li><li>使用<strong>fiddler或者chrome自带功能</strong>（可以参考我之前的相关文章）,点击“沪深A股”或者点击“翻页”，从fiddler捕获的连接或chrome的<strong>开发者工具（F12）</strong>的Network中找到最新的几个连接，找到真实的连接.<img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/get_sl_real_url.png" class title="chrome的F12查看Network信息"></li><li>分析请求request的header请求，发现关键信息，pn=3，pz=20，猜想是第3页和每页20个的请求参数，其他f1,f2…应该是需要请求哪些数据的参数。那么我们把参数改成pn=1&amp;pz=5000，也就是一次性将A股的4000多只股票全部获取到。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Request URL: http://56.push2.eastmoney.com/api/qt/clist/get?cb=jQuery1124034105331658665383_1612251280345&amp;pn=3&amp;pz=20&amp;po=1&amp;np=1&amp;ut=bd1d9ddb04089700cf9c27f6f7426281&amp;fltt=2&amp;invt=2&amp;fid=f3&amp;fs=m:0+t:6,m:0+t:13,m:0+t:80,m:1+t:2,m:1+t:23&amp;fields=f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152&amp;_=1612251280452</span><br><span class="line">Request Method: GET</span><br><span class="line">Status Code: <span class="number">200</span> OK</span><br><span class="line">Remote Address: <span class="number">101.89</span><span class="number">.224</span><span class="number">.78</span>:<span class="number">80</span></span><br><span class="line">Referrer Policy: strict-origin-when-cross-origin</span><br></pre></td></tr></table></figure><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/sl_real_url_req.png" class title="分析请求信息"></li></ul><ol start="2"><li>访问真实连接，并对返回值进行解析</li></ol><ul><li>分析返回reponse，发现其是一个非常规整json字符串，外面包了一个小括弧，那就非常好办了，通过正则表达式把json字符串取出来，然后使用json包进行解析即可。</li><li>通过页面对比，发现每个返回字段代表的中文含义，例如：f12是股票代码<img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/sl_real_url_rsp.png" class title="分析返回信息"></li></ul><h4 id="获取每只股票信息信息"><a href="#获取每只股票信息信息" class="headerlink" title="获取每只股票信息信息"></a><strong>获取每只股票信息信息</strong></h4><h5 id="☆完整代码-1"><a href="#☆完整代码-1" class="headerlink" title="☆完整代码"></a><strong>☆完整代码</strong></h5><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取文件,拼接地址</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;info_fin.csv&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27;股票代码&#x27;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;股票名称&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;最新价&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;最高价&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;最低价&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;今开&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总手&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;金额&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;外盘&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;量比&quot;</span></span><br><span class="line">    +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;涨停&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;跌停&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;收益（新）&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;昨收&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总股本&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;流通股&quot;</span></span><br><span class="line">        +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;净利润&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;每股净资产&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总值&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;流值&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;板块&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;地区&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;pe&quot;</span></span><br><span class="line">        +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;ROE&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总营收&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总营收同比&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;净利润同比&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;净利率&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;负债率&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;上市时间&quot;</span></span><br><span class="line">        +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;每股未分配利润&quot;</span>+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;stock.csv&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">fileReader = csv.reader(file)</span><br><span class="line">filedata = <span class="built_in">list</span>(fileReader) </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _,i <span class="keyword">in</span> <span class="built_in">enumerate</span>(filedata):</span><br><span class="line">    <span class="keyword">if</span> _==<span class="number">0</span>: <span class="comment"># 跳过文件头</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">1</span>].startswith(<span class="string">&#x27;6&#x27;</span>):</span><br><span class="line">        addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=1.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=0.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    re_cont = re.findall(<span class="string">&quot;\\((.*?)\\);&quot;</span>,requests.get(addr).text,re.S)</span><br><span class="line">    je_cont = json.loads(re_cont[<span class="number">0</span>])</span><br><span class="line">    <span class="comment">#fin = &#123;&#125;</span></span><br><span class="line">    <span class="comment">#fin[&#x27;code&#x27;] = je_cont[&#x27;data&#x27;][&#x27;f57&#x27;]</span></span><br><span class="line">    <span class="comment">#fin[&#x27;name&#x27;] = je_cont[&#x27;data&#x27;][&#x27;f58&#x27;]</span></span><br><span class="line">    work = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#print(str(je_cont[&#x27;data&#x27;][&#x27;f43&#x27;]))</span></span><br><span class="line">    <span class="comment">#print(&#x27;12&#x27;)</span></span><br><span class="line">    work = (<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f57&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f58&#x27;</span>])+<span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f43&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f44&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f45&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f46&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f47&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f48&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f49&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f50&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f51&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f52&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f55&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f60&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f84&#x27;</span>])+<span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f85&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f105&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f92&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f116&#x27;</span>])+<span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f117&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f127&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f128&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f162&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f173&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f183&#x27;</span>])+<span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f184&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f185&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f187&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f188&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f189&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f190&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    work = work+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    f.write(work) </span><br></pre></td></tr></table></figure></code></pre><h5 id="☆代码解读-1"><a href="#☆代码解读-1" class="headerlink" title="☆代码解读"></a><strong>☆代码解读</strong></h5><ol><li>通过点击详情页面，找到每只股票详细信息访问的连接的规律<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://quote.eastmoney.com/sz******.html</span><br><span class="line">http://quote.eastmoney.com/sh******.html</span><br></pre></td></tr></table></figure></li><li>同样的方法，发现所有的股票详细数据，都是动态加载的。使用<strong>fiddler或者chrome自带功能</strong>，获取真实连接。</li><li>分析规律组装真实连接，“6”开头的请求参数为“1.股票代码”，其他是“0.股票代码”<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> i[<span class="number">1</span>].startswith(<span class="string">&#x27;6&#x27;</span>):</span><br><span class="line">    addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=1.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=0.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>解析返回reponse，同样的正则表达式+json解析，然后通过页面对比，发现每个返回字段对比的中文含义，例如：f57代表股票代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">最新价:f43</span><br><span class="line">最高:f44</span><br><span class="line">最低:f45</span><br><span class="line">今开:f46</span><br><span class="line">总手:f47</span><br><span class="line">金额:f48</span><br><span class="line">外盘:f49</span><br><span class="line">量比:f50</span><br><span class="line">涨停:f51</span><br><span class="line">跌停:f52</span><br><span class="line">收益（三）: f55</span><br><span class="line">股票代码:f57</span><br><span class="line">股票名称:f58</span><br><span class="line">昨收:f60</span><br><span class="line">总股本:f84</span><br><span class="line">流通股:f85</span><br><span class="line">净利润:f105</span><br><span class="line">每股净资产:f92</span><br><span class="line">总值:f116</span><br><span class="line">流值:f117</span><br><span class="line">板块：f127</span><br><span class="line">地区：f128</span><br><span class="line">pe（动）:f162</span><br><span class="line">ROE:f173</span><br><span class="line">总营收:f183</span><br><span class="line">总营收同比:f184</span><br><span class="line">净利润同比:f185</span><br><span class="line">净利率:f187</span><br><span class="line">负债率:f188</span><br><span class="line">上市时间:f189</span><br><span class="line">每股未分配利润:f190</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;【老博客地址】&quot;&gt;&lt;a href=&quot;#【老博客地址】&quot; class=&quot;headerlink&quot; title=&quot;【老博客地址】&quot;&gt;&lt;/a&gt;&lt;strong&gt;【老博客地址】&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://blog</summary>
      
    
    
    
    <category term="财富" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="技术工具" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="基础教程" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="数据获取" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="技术" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="python" scheme="https://unclevicky.github.io/rabbitBear/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/01/hello-world/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/01/hello-world/</id>
    <published>2021-02-01T07:58:28.980Z</published>
    <updated>2021-02-01T07:58:28.980Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
