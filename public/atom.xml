<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rabbit &amp; Bear</title>
  
  
  <link href="https://unclevicky.github.io/rabbitBear/atom.xml" rel="self"/>
  
  <link href="https://unclevicky.github.io/rabbitBear/"/>
  <updated>2021-03-04T14:10:11.866Z</updated>
  <id>https://unclevicky.github.io/rabbitBear/</id>
  
  <author>
    <name>bear</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【自我进化1到2】01.关系中的自我</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/03/04/%E4%B8%AA%E4%BA%BA%E8%BF%9B%E5%8C%96%E8%AE%BA01/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/03/04/%E4%B8%AA%E4%BA%BA%E8%BF%9B%E5%8C%96%E8%AE%BA01/</id>
    <published>2021-03-03T16:00:00.000Z</published>
    <updated>2021-03-04T14:10:11.866Z</updated>
    
    <content type="html"><![CDATA[<p><font color="grey"><font size="2"><em>这一系列是基于陈海贤老师的自我进化课，用以自我剖析</em> </font></font></p><p>兔子曾经引以为傲的，是自己的时间管理方法———按分钟计算的，每30min看一下学习状态并及时调整，它帮助兔子一年内一次性7分过雅思，过CPA和CPV考试，写过实证，到过实习，玩过比赛。  </p><p>凭借这种打满鸡血的精神状态，我度过了充实圆满的2018、19和20年的大部分时间，直到2020年下半叶，遇到大熊，我的精神节奏被打乱了。  </p><p>自控力越来越差，开始频繁发脾气，出问题总想躲避，逃避沟通，对认识新朋友也失去了积极性。  </p><p>和大熊认识起初，我拥有独立自由的生活，除了爸妈，我无需向任何人汇报。但随着亲密关系的建立，情感依赖迅速膨胀，我惧怕了。<u><strong>除了抢占我的时间、空间，它把脆弱年少不完整的自我真实地暴露出来，在我和他面前彰显无遗。望着镜子中的自己，我已记不清对他说了多少次，“这不是我。”</strong> </u> </p><p>我用了很久分析原因，一方面是客观因素，工作不稳定，另一方面也是我苦苦想寻求解决的——<strong>并未建立稳定的自我</strong>。  </p><p><u><strong>没有建立对自我身份的认同，当那些脆弱的部分通过亲密关系，被强行整合进自我概念里，我变得异常排斥，很难接纳自己，“这不是我”。</strong> </u> </p><p>所以，我试图探索，“我到底是怎样的”。</p><p>开篇说一个词，“关系“。  </p><h4 id="一、自我处在关系中"><a href="#一、自我处在关系中" class="headerlink" title="一、自我处在关系中"></a><center>一、自我处在关系中</center></h4><p>人无时无刻不处在关系中。</p><p>在每一段关系里面，自我是不同的。</p><p>大熊说，刚认识我的时候，我每天都笑的很阳光，但后来感觉就没那么积极了。所以我曾质疑，自己是不是变了。</p><p>陈海贤老师讲了个故事，在孩子没做完作业的时候，妈妈会大声责备说，你怎么这么不听话！突然电话铃响了，妈妈接起电话，满脸笑容说，“哦，是老师啊，您说来家访，好啊好啊……”。</p><p>曾经，我会把故事理解为“真实自我”和“虚假自我”的差异，但不是的。<strong>从关系的视角来看，它反映的是妈妈在“亲近”和“疏远”这两种不同关系中的差异，妈妈的行为都是真实的自我。所以说，并非个性，而是所处的关系，决定了你的想法和行为。</strong></p><p>从关系的视角思考，会让很多看似无解的问题有了答案。比如说，我对坚持学法语有拖延症，我就进行了如下的剖析。  </p><p><font color="grey"><b>R：学法语有拖延症，怎么办？<br>A：为什么这么想<br>R：在学法语法语的时候，觉得记单词很难，经常不想去学。<br>A：难在哪里呢？如果学的不好，谁会评价你呢？<br>R：是我爷爷Peter。我担心Peter听到我退步的法语，会感到失望。</b></font></p><p>到这里，从关系的视角，拖延症就不只是我个人的问题了，而是我和爷爷关系的产物。</p><h4 id="二、关系的视角拓展改变的空间"><a href="#二、关系的视角拓展改变的空间" class="headerlink" title="二、关系的视角拓展改变的空间"></a><center>二、关系的视角拓展改变的空间</center></h4><p><strong>妨碍改变的，是头脑中那个顽固的“自我概念”。</strong></p><p>大熊在和我对话过程中发现，我习惯性使用过多“你应该……“。我给自己贴上类似“自信”“努力”的个性标签，同时指责别人为什么会有这样那样古怪的个性。  </p><p><strong>在与人的交往中，我抽象出“自我”，也就是头脑中根深蒂固的那个模样，它不会变，始终积极向上。这些条条框框帮助我增加了人生控制感，但也塑造了僵固型思维，即</strong></p><p><u><strong>“我不能暴露我的脆弱，给那个夸奖我的人，以免让他失望。”</strong></u></p><p>现在想来，每段关系中的自我都是不一样的，如果喜欢探索和改变的人，为何不选择在不同的关系中发现不一样的自己呢。不再给自己贴上标签，而是去审视具体是什么样的关系，导致了现在的行为。也不指责别人的性格，而是理解什么样的关系，让他表现出这样的行为。</p><p>比如，上文说到，我和爷爷的关系导致了我对法语学习缺乏积极性。在这段关系里，既然并非我个性问题，那可以寻求可以让自己表现更好的关系，发现不一样的自己，比如说，认识学法语的新朋友们。</p><p>摆脱根深蒂固，把每个自我放到具体的关系中，从每一段关系，看自我的表现，会成长很多。</p><h4 id="尾"><a href="#尾" class="headerlink" title="尾"></a><center>尾</center></h4><p>从个体视角到关系视角，只要做出转变，便不再是那个贴着永久标签的自己。而亲密感的建立，是自我发展的路上一个重要里程碑。</p><p>所以，有时感觉很幸运。论朋友，某种程度上，我和大熊志同道合，心中有所想，定有所为。也愿这种深层次的照顾，可以深化双方的自我身份认同，帮助彼此更能接纳自己，变得更完整。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;font color=&quot;grey&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;em&gt;这一系列是基于陈海贤老师的自我进化课，用以自我剖析&lt;/em&gt; &lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;兔子曾经引以为傲的，是自己的时间管理方法———按分钟计算的，每30min看一下学习状态并及时</summary>
      
    
    
    
    <category term="个人进化" scheme="https://unclevicky.github.io/rabbitBear/categories/%E4%B8%AA%E4%BA%BA%E8%BF%9B%E5%8C%96/"/>
    
    <category term="心理学" scheme="https://unclevicky.github.io/rabbitBear/categories/%E4%B8%AA%E4%BA%BA%E8%BF%9B%E5%8C%96/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
    
    <category term="听陈海贤自我进化课" scheme="https://unclevicky.github.io/rabbitBear/tags/%E5%90%AC%E9%99%88%E6%B5%B7%E8%B4%A4%E8%87%AA%E6%88%91%E8%BF%9B%E5%8C%96%E8%AF%BE/"/>
    
  </entry>
  
  <entry>
    <title>兔子和大熊聊《资治通鉴》（导读）</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/17/preparation/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/17/preparation/</id>
    <published>2021-02-17T12:56:43.000Z</published>
    <updated>2021-02-17T13:14:12.261Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创作背景"><a href="#创作背景" class="headerlink" title="创作背景"></a><strong>创作背景</strong><p></p></h3><p>春节期间，兔子在读《资治通鉴》，看到书里的语言，备受鼓舞，想着在互联网平台上和大家分享这本书里的新知。和大熊说罢，我们一拍即合，将把对《资治通鉴》的解读分为众多系列，以双人音频的方式放在喜马拉雅上。</p><br>以下为第一部分——导读。<p></p><h3 id="导读"><a href="#导读" class="headerlink" title="导读"></a><strong>导读</strong><p></p></h3><p>大熊/兔子：读史明智、鉴往知来。我是兔子/大熊。</p><br>大熊：欢迎大家来到兔子和大熊讲《资治通鉴》，以后的节目将由我们俩为大家解读《资治通鉴》这本书里的干货。<p></p><br>兔子：那大熊老师，我们今天和大家聊点什么呢？<p></p><br>大熊：由于今天是我们第一节课，那我们就从这本书的背景干货开始聊起。整本书，一共294卷，上可以追溯到战国初期韩赵魏三家分晋，下至宋太祖赵匡胤建国前夕，囊括了周秦两汉、魏晋南北朝、隋唐五代各朝的历史，整个时间跨度有1362年。<p></p><br>兔子：整本书的正文有三百多万字，司马光参考了三百多部著作，用了19年的时间才完成。<p></p><br>大熊：没错，那司马光为什么要写这本书呢？你觉得有哪些原因？<p></p><br>兔子：嗯，我们都知道“司马光砸缸”的故事，所以我想这么聪明的孩子，写书是他表达自己思想的一种途径，或者说是出于自身的喜好吧。<p></p><br>大熊：没错没错，我们都知道”砸缸“那个故事，其实司马光编撰这本书，一方面是出自自己的喜好和责任感，另一方面也和当时的政治环境有关。我们知道，北宋前期，提倡文治教化，鼓励大家多去总结历史经验和得失，所以在当时有很多学者都在做一件事，就是翻腾之前的史料，进行总结。<p></p><br>兔子：那这样说的话司马光写这本书，可以说是“奉敕”编撰的。所以在司马光和他的团队完成书稿，拿给皇帝看时，当时的皇帝宋神宗认为，这本书鉴于往事，有资于治道，故赐名《资治通鉴》。<p></p><br>大熊：没错，也正因为司马光的惊世情怀，才使得《资治通鉴》这本书得以经世致用。书里的内容是按照时间顺序编撰的，挑选了政治上和军事上的重要的人物、重要的事件。最精彩的地方是，在这每一部分之后，作者都有自己一段盖棺定论的评价，以提供给读者们借鉴。<p></p><br>兔子：所以这本书里可以看到故事、也可看到评述的语言，近代学者曾国藩在向众人推举这本书时，说这是经世治国最好的书。因为它不光讲道理，还通晓权利变更，还讲了如何操作，可谓是精彩纷呈。<p></p><br>大熊：没错，《资治通鉴》得到了后世学者和帝王的交口称誉，作为一本史书，它的价值可以从两方面去评价：一个是史料的价值，一个是史著的价值。作为历史材料，《资治通鉴》中隋唐五代的部分，是很难得的历史记载；同样，作为一部史学巨著，它也具有不可替代的阅读鉴赏价值。<p></p><br>兔子：司马光在编撰的时候参考了300多部著作，还特地又写了另外一本书，叫《考异》，记载从哪里搜罗来的史料，并进行考订。这才是学术研究的初心啊，讲求史料真实。<p></p><br>大熊：所以这本书，真的是非常值得我们仔细去品味。<p></p><br>兔子：大熊，你读《资治通鉴》，收获了哪些呢？<p></p><br>大熊：借用某先贤的一句话，读资治通鉴“可以自淑，可以诲人，可以知道而乐“。自淑就是提升自己，诲人就是可以和人分享，知道而乐就是知道为人之道、处世之道，感到很愉快，很快乐。我想，这也是我们大多数人读《资治通鉴》的宗旨吧。<p></p><br>兔子：没错，前段时间我有把《资治通鉴》的一些读后感发布到我的公众号上，有朋友和我留言说，古人就已想到了现代人遇到的问题的解决之路，真是智慧。所以我会感到，别人从我我分享的东西里获取新知，真是十分幸福的事情。<p></p><br>大熊：当然啦，历史是具体的，但道理是抽象的，所以对待很多历史事件和人物，不同人的看法也不同。也欢迎大家在以后的节目里可以发表自己的想法，我们可以一同讨论、共同进步。<p></p><br>兔子：大熊和兔子都是国学迷，也非常想通过分享对《资治通鉴》的个人解读，认识更多关注国学经典的你们。记得点击音频右方的“免费订阅”哦，我们下期节目见。<p></p><br>大熊：下期节目见。<p></p>  <p></p><p><a href="http://xima.tv/g4nS16?_sonic=0">导读音频-喜马拉雅主页</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;创作背景&quot;&gt;&lt;a href=&quot;#创作背景&quot; class=&quot;headerlink&quot; title=&quot;创作背景&quot;&gt;&lt;/a&gt;&lt;strong&gt;创作背景&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;&lt;/h3&gt;&lt;p&gt;春节期间，兔子在读《资治通鉴》，看到书里的语言，备受鼓舞，想着在互联网平台上</summary>
      
    
    
    
    <category term="历史" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%8E%86%E5%8F%B2/"/>
    
    <category term="中国史" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%8E%86%E5%8F%B2/%E4%B8%AD%E5%9B%BD%E5%8F%B2/"/>
    
    
    <category term="资治通鉴" scheme="https://unclevicky.github.io/rabbitBear/tags/%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客基础环境搭建（非常详细）</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-07T02:36:33.000Z</published>
    <updated>2021-02-07T14:01:02.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【背景】"><a href="#【背景】" class="headerlink" title="【背景】"></a><strong>【背景】</strong></h2><p style="text-indent:2em">我是一名学财务的文科生，没有任何计算机基础，但是喜欢写文章，之前都是在微信公众号上写，但是有诸多限制，于是萌生了想搭建一个自己的博客的念头。我把我的想法告诉了我的一个朋友（姑且称他为X君吧），X君帮我搭建了一个网站，并把过程写了一个简单的教程并讲给我听。我根据X君的教程和讲解，自己也把环境搭建起来了。在这里做一个记录。算是在新博客网站中的第一篇文章吧。</p><h2 id="【目标】"><a href="#【目标】" class="headerlink" title="【目标】"></a><strong>【目标】</strong></h2><ol><li>使用nodejs的hexo搭建本地博客系统</li><li>使用git进行版本管理（和小伙伴们协同工作的必备良兔（tool））</li><li>使用github进行代码托管（X君告诉我自己写的东西可以上传到这个网站，可以当作一个本地的备份，也可以随时随地工作，但是要注意隐私问题）</li><li>使用github Page作为博客网站的访问（X君说这是一个免费的个人网页托管服务器，不是很懂，反正就是能通过他自定义并在公网上访问自己的文章）</li></ol><h2 id="【小白科普】"><a href="#【小白科普】" class="headerlink" title="【小白科普】"></a><strong>【小白科普】</strong></h2><ol><li><strong>运行环境</strong><ul><li>任何软件的运行都需要环境，比如win10需要在笔记本电脑上运行，andriod需要在手机上运行；笔记本电脑和手机就是win10和android这俩软件的运行环境。</li><li>操作系统是一个特殊的软件，他们为其他软件的运行提供环境，比如QQ、微信都需要安装在win10、ios或android操作系统上才能运行，只不过他们要求的格式不一样，win10可以运行exe软件，ios可以运行dmg文件，andriod运行pkg文件等。</li><li>针对那些没有可视化交互界面的软件，操作系统会给他们提供一个特殊的运行环境。比如win10的cmd运行环境，mac的bash环境，androi也有只不过我们在手机上不常用。（不太好理解，但是可以类比win10需要笔记本电脑提供环境，QQ需要win10操作系统提供环境，python等没有界面的软件需要cmd提供环境一样类比着理解）。</li><li>python、nodejs、mysql等这些都是没有可视化交互界面的软件，所以需要我们在cmd或者bash中运行（X君说python和nodejs也有图形交互界面，但是为了让我更好的理解这些概念，所以就不推荐我使用）。</li></ul></li><li><strong>环境变量</strong><ul><li>上面提到了运行环境，但是我按X君的教程搭建环境的时候，经常<strong>提示某某文件后文件夹找不见</strong>，于是X君又给我普及了<strong>环境变量</strong>的概念。</li><li>当我们使用cmd或bash运行一个软件时，会以以下顺序执行：<ul><li>首先会在<strong>当前目录</strong>中寻找是否有该软件（例如python.exe）；</li><li>如果没有则会在<strong>当前用户的PATH环境变量指定的所有目录中按先后顺序循环寻找</strong>，如果找到了就直接运行，不再往下找。这个PATH就是一个环境变量（可以理解为一个字符串），存放了一堆的文件夹目录，win10是以“;”隔开，mac是以“：”隔开，大概长下面这个样子。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/abbywalker/opt/anaconda3/bin:/Users/abbywalker/opt/anaconda3/condabin:/Library/Frameworks/Python.framework/Versions/3.8/bin:/usr/<span class="built_in">local</span>/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/<span class="built_in">local</span>/mysql/bin</span><br></pre></td></tr></table></figure></li><li>如果还没有则会继续在<strong>系统的PATH环境变量指定的所有目录中按先后顺序循环寻找</strong></li><li>如果还是找不到，就会报错<strong>提示某某文件后文件夹找不见</strong></li></ul></li></ul></li><li><strong>运行软件的5个方法</strong><ul><li>根据上面环境变量的介绍，运行软件可以有5种方法</li><li>直接到该软件的安装目录下运行 （对应于环境变量中的<strong>当前目录</strong>）</li><li>把该软件的安装目录加入到<strong>该用户的PATH变量</strong>中（具体方法后面讲）</li><li>在当前运行的cmd或bash中临时指定，而不影响其他的程序运行（X君建议使用这种方法，这样可以同一个电脑安装多版本的软件，比如同时安装python2.7和3.7，通过这种方法临时指定当前运行的环境而不影响其他程序）（具体方法后面讲）</li><li>把该软件的安装目录加入到<strong>系统的PATH变量</strong>中（具体方法后面讲）</li><li>直接指定该软件安装目录的绝对路径进行执行，例如:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;/usr/<span class="built_in">local</span>/mysql/bin/python <span class="comment">#mac的bash环境</span></span><br><span class="line">&gt;d:\soft\pytthon\python.exe <span class="comment">#win10的cmd环境</span></span><br></pre></td></tr></table></figure><p style="text-indent:2em"><b>好了，小白科普到此结束，下面进入本文正题。</b></p></li></ul></li></ol><h2 id="【环境准备】"><a href="#【环境准备】" class="headerlink" title="【环境准备】"></a><strong>【环境准备】</strong></h2><ol><li>安装git</li><li>安装nodejs</li><li>安装hexo</li><li>github搭建源文件个人仓库</li><li><strong>github设置多Page</strong>（默认一个账户只能有一个主页Page）</li><li>生产SSH并添加到github</li><li>将hexo发布到github</li><li>页面访问（本地预览和公网访问）</li></ol><p style="text-indent:2em">PS：X君用的是windows，我用的是mac所以教程会写两份。</p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a><strong>安装git</strong></h3><ol><li>windows的比较简单，直接下载软件，一路下一步即可；</li><li>mac上安装稍微复杂一点，安装过程记录以下；<ul><li>百度搜索 mac git安装，会提示到 <a href="https://git-scm.com/download/mac">git-scm</a>去安装</li><li>页面是英文的，按第一个教程，先安装<strong>homebrew</strong>,按照homebrew官网的提示，第一种方法直接安装,<code>/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</code>需要翻墙 <strong>【失败】</strong>，按官网第二种方法，先下载下来，然后解压，会报错，好不容易解压出来了，运行依然会报错。<strong>【失败】</strong>。<strong>建议大家不要按这个方法安装，当然有兴趣的可以自己尝试。</strong></li><li>鉴于<strong>homebrew</strong>的教训，所以<strong>XCode</strong>的方式，我也没有尝试。</li><li>直接使用第三种方式，<strong>Binary installer</strong>，下载sourceforge编译好的安装包，虽然不是最新版，但是不影响咱们的使用。<strong>直接下载zip文件，解压出dmg文件，安装即可。</strong></li></ul></li></ol><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a><strong>安装nodejs</strong></h3><ol><li>windows和mac上都比较简单，直接下载软件，一路下一步即可；</li></ol><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a><strong>安装hexo</strong></h3><p>&ensp;&ensp;&ensp;&ensp;<strong>windows和mac是一样的</strong></p><ol><li><strong>在nodejs环境中（cmd或者bash）安装hexo包</strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><strong>测试hexo是否成功</strong><ul><li>初始化<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br></pre></td></tr></table></figure></li><li>安装基础环境包 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p style="text-indent:2em">执行成功后，myBlog文件夹的结构如下:</p></li></ul></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">myBlog</span><br><span class="line">├── _config.yml <span class="comment"># 网站的配置信息，您可以在此配置大部分的参数。 </span></span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds <span class="comment"># 模版文件夹</span></span><br><span class="line">├── <span class="built_in">source</span>  <span class="comment"># 资源文件夹，除 _posts 文件，其他以下划线_开头的文件或者文件夹不会被编译打包到public文件夹</span></span><br><span class="line">|   ├── _drafts <span class="comment"># 草稿文件</span></span><br><span class="line">|   └── _posts <span class="comment"># 文章Markdowm文件 </span></span><br><span class="line">└── themes  <span class="comment"># 主题文件夹</span></span><br></pre></td></tr></table></figure><ul><li>本地启动hexo服务器进行测试  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>&ensp;&ensp;&ensp;&ensp;在浏览器中输入<strong><a href="http://localhost:4000/">http://localhost:4000</a></strong>，如果看到如下效果，则证明hexo环境搭建成功:<img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/hexo-hello.png" class title="初始化"></li></ul><h3 id="github搭建个人源码仓库"><a href="#github搭建个人源码仓库" class="headerlink" title="github搭建个人源码仓库"></a><strong>github搭建个人源码仓库</strong></h3><p style="text-indent:2em">   <font color="red">     根据X君的建议，为了保证隐私安全和版权，自己写的博客的<b>源文件</b>单独保存在一个github仓库里，供自己使用；把hexo编译后的<b>发布版本</b>保存在另外一个github仓库里,通过github Page供大家访问。   </font></p><ol><li><p>注册github（略）。</p></li><li><p>登录github（略）</p></li><li><p>新建个人仓库 <strong>（建议私人库）</strong></p><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_new.png" class title="点击新建按钮"><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_new_config.png" class title="填入相关信息"></li><li><p>导出个人仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/unclevicky/myBlogSrc.git .</span><br></pre></td></tr></table></figure></li><li><p>把刚建立的<strong>myBlog文件下的所有内容</strong>放到刚导出的github目录，然后再提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;第一次提交我的blog&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="github设置多Page"><a href="#github设置多Page" class="headerlink" title="github设置多Page"></a><strong>github设置多Page</strong></h3></li><li><p><font color="red">直接使用github个人主页</font></p><ul><li>一个github主页只能有一个个人主页</li><li>新建一个<strong>与账户同名的xxxx.github.io</strong> (xxxx是你自己的账户名，X君的是unclevicky.github.io)</li><li><strong>记录下这个特殊仓库的git地址供后面使用</strong>,<a href="https://github.com/unclevicky/unclevicky.github.io.git">https://github.com/unclevicky/unclevicky.github.io.git</a></li></ul></li><li><p><font color="red"><b>利用每个项目的GitHub Pages实现多主页访问</b></font></p><ul><li>新建一个仓库项目，方法同上<img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_new.png" class title="点击新建按钮"></li><li>输入项目名称等信息(建议公开项目,不公开也行其实)，截图里用的名字是”myBlogPub”，写教程的时候已经改成了”rabbitBear”。可根据需要自己修改。<img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_new_pub.png" class title="填入相关信息"></li><li>在github中配置页面，向下滚动<b>设置项目GitHub Pages信息</b><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_setting.png" class title="设置GitHub Pages"><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_pub_page.png" class title="设置GitHub Pages"></li><li>记住两个地址<ul><li><strong>记住项目仓库的地址，后面配置hexo发布时使用</strong>,<a href="https://github.com/unclevicky/rabbitBear.git">https://github.com/unclevicky/rabbitBear.git</a></li><li><strong>记住项目Github Page地址，后面访问博客时使用</strong>,<a href="https://unclevicky.github.io/rabbitBear/">https://unclevicky.github.io/rabbitBear/</a></li></ul></li></ul></li></ol><h3 id="生产SSH并添加到github"><a href="#生产SSH并添加到github" class="headerlink" title="生产SSH并添加到github"></a><strong>生产SSH并添加到github</strong></h3><ol><li><p>配置一个SSH绑定到github，SSH一个是私钥，一个是公钥，私钥保存到个人本地（千万别泄露），公钥配置到github上。（不太懂，反正类似我党当年在小黑板上登一个报纸-公钥，每个人拿自己的暗号-私钥，去破解想要的信息一样。同一份报纸，每个人私钥不同，获取的情报也不同一样。姑且这理解吧）。</p></li><li><p>回到本地的git环境,设置github用户的全局用户和邮箱，如果已设置可以忽略。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用以下语句检测是否设置，如果返回为空，则证明未设置</span></span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果没设置，则使用下面两句话设置即可</span></span><br><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>然后创建SSH,使用以下语句，然后一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># windows的话使用cmd环境,xxxx是你的windows用户</span></span><br><span class="line"><span class="built_in">cd</span> c:/users/xxxx/.ssh/ </span><br><span class="line"><span class="comment"># mac的话使用bash环境,$HOME也是一个环境变量（参考上面），指向当前用户的home目录</span></span><br><span class="line"><span class="comment"># cd $HOME/.ssh/</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/git_ssh.png" class title="SSH秘钥截图"></li><li><p>将SSH的公钥，绑定到github上。</p><ul><li>打开上面的<strong>id_rsa.pub</strong>文件，把所有的内容拷贝下来</li><li>粘贴到github的SSH里面<img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_ssh.png" class title="用户配置页面截图"><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_ssh_new.png" class title="SSH配置页面截图"><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/github_ssh_newdetail.png" class title="新建配置截图"></li></ul></li><li><p>在本地cmd或bash环境测试秘钥是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># windows的话使用cmd环境,xxxx是你的windows用户</span></span><br><span class="line"><span class="built_in">cd</span> c:/users/xxxx/.ssh/ </span><br><span class="line"><span class="comment"># mac的话使用bash环境,$HOME也是一个环境变量（参考上面），指向当前用户的home目录</span></span><br><span class="line"><span class="comment"># cd $HOME/.ssh/</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果，显示<code>Hi unclevicky! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>,说明成功了。</p><img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/ssh_suc.png" class title="SSH配置成功截图"></li><li><p><strong>不成功的可能原因</strong></p><ul><li>如果不成功，加入-v参数，则使用以下命令，查看失败原因<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T -v git@github.com </span><br></pre></td></tr></table></figure></li><li>X君第一次也失败，使用-v查看调试信息之后发现，是找不到秘钥。这个问题，是绝对路径和相对路径造成的，所以在.ssh的目录下，新建一个<strong>config</strong>的文件，制定秘钥的绝对路径即可:<img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/git_ssh.png" class title="SSH秘钥截图"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User xxxx@xx.com <span class="comment"># 你的邮箱地址</span></span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile C:\\Users\\xxxx\\.ssh\\id_rsa <span class="comment"># 你的私钥的保存路径和名字</span></span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="将hexo发布到github"><a href="#将hexo发布到github" class="headerlink" title="将hexo发布到github"></a><strong>将hexo发布到github</strong></h3><ol><li><p>hexo本地环境测试【√】；github Page完成【√】；ssh配置完成【√】。剩下就是修改hexo的配置文件，然后发布到github page上，即可访问。</p></li><li><p>修改hexo博客目录的配置文件<strong>_config.yml</strong>,找到 <strong>“url:”</strong> 和 <strong>“deploy:”</strong></p><p style="text-indent:2em"><font color="red"><b><p>特殊说明：</p><ul><li>如果github使用的“直接使用github个人主页”方法，根据上面让记住的连接，url和deploy的配置为：</li></ul></b></font></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">url: https://unclevicky.github.io</span><br><span class="line">root: /</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/unclevicky/unclevicky.github.io.git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p style="text-indent:2em">   <font color="red">   <b><ul><li>如果github使用的“项目的GitHub Pages实现多主页”方法，根据上面让记住的连接，url需要指定具体的项目名称，url和deploy的配置为：</li></ul></b></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">url: https://unclevicky.github.io/rabbitBear/</span><br><span class="line">root: /rabbitBear</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/unclevicky/rabbitBear.git</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>项目的GitHub Pages实现多主页的配置如下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line">url: https://unclevicky.github.io/rabbitBear/</span><br><span class="line">root: /rabbitBear</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  trailing_html: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/unclevicky/rabbitBear.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><ol start="3"><li>在本地执行hexo的编译和发布命令，则可成功发布到github上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment"># 删除以前的发布</span></span><br><span class="line">hexo g -d  <span class="comment"># 重新编译生成，并按配置文件中的github信息，发布到对应的网站上</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="公网访问访问博客主页"><a href="#公网访问访问博客主页" class="headerlink" title="公网访问访问博客主页"></a><strong>公网访问访问博客主页</strong></h3><ol><li><font color="red"><b>直接个人主页方式</b></font><br><a href="https://xxxx.github.io/%EF%BC%8Cxxxx%E6%98%AF%E4%BD%A0%E7%9A%84github%E7%94%A8%E6%88%B7%E5%90%8D">https://xxxx.github.io/，xxxx是你的github用户名</a><br>例如：<a href="https://unclevicky.github.io/">https://unclevicky.github.io/</a></li><li><font color="red"><b>项目多主页方式</b></font><br><a href="https://xxxx.github.io/yyyy/%EF%BC%8Cxxxx%E6%98%AF%E4%BD%A0%E7%9A%84github%E7%94%A8%E6%88%B7%E5%90%8D,yyyy%E6%98%AF%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%90%8D">https://xxxx.github.io/yyyy/，xxxx是你的github用户名,yyyy是你的项目名</a><br>例如：<a href="https://unclevicky.github.io/rabbitBear/">https://unclevicky.github.io/rabbitBear/</a></li></ol><h2 id="修改博客样式"><a href="#修改博客样式" class="headerlink" title="修改博客样式"></a><strong>修改博客样式</strong></h2><ol><li>默认的样式不是很好看，可以自己DIY样式和功能，比如统计访问量、设置分类、增加订阅、回复等功能，这也是为什么要搭建自己模块的原因。<strong>DIY！</strong></li><li>当然也可以使用网上那些达人们已经diy好的样式，比如X君给我推荐的buterfly这款样式。<ul><li>下载样式到博客的themes目录，在线安装和手工下载都可以。以butterfly为例<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在cmd或bash下执行</span></span><br><span class="line"><span class="comment"># 下载并安装样式文件</span></span><br><span class="line">npm i hexo-theme-butterfly</span><br><span class="line"><span class="comment"># 下载并安装该样式需要的插件，每个样式需要的插件不一样，根据实际需要来，否则有些样式显示不出来</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li></ul></li><li>hexo博客目录的配置文件<strong>_config.yml</strong>，找到”theme”，修改成刚下载的”butterfly”<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></li><li>最终效果如下<img src="/rabbitBear/2021/02/07/hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/butterfly.png" class title="butterfly样式效果"></li></ol><h2 id="写新博客"><a href="#写新博客" class="headerlink" title="写新博客"></a><strong>写新博客</strong></h2><ol><li>在<strong>源文件</strong>的根目录执行，<code>hexo new xxxx</code>,xxxx是博客名称，支持中文。例如:<code>hexo new 博客基础环境搭建（非常详细）</code>。</li><li>则在博客的”source/_posts/“目录下生产一个，同名的.md文件，例如”hexo博客基础环境搭建（非常详细）.md”，此文件就是我们的博客源文件，修改此文件，把博客内容写进去，然后使用前面提到的,<code>hexo clean</code> <code>hexo g -d</code>,即可完成编译和发布。</li><li><strong>.md是markdown语言写的文件，非常简洁和灵活，至于如何使用.md文件写博客，将在后续的博客中陆续更新。本篇文章即是用此方法编写完成。对于我这个新手来说，入门还是比较简单的。</strong></li></ol><h2 id="The-End！-Have-Fun！"><a href="#The-End！-Have-Fun！" class="headerlink" title="The End！ Have Fun！"></a>The End！ Have Fun！</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;【背景】&quot;&gt;&lt;a href=&quot;#【背景】&quot; class=&quot;headerlink&quot; title=&quot;【背景】&quot;&gt;&lt;/a&gt;&lt;strong&gt;【背景】&lt;/strong&gt;&lt;/h2&gt;&lt;p style=&quot;text-indent:2em&quot;&gt;
我是一名学财务的文科生，没有任何计算机基</summary>
      
    
    
    
    <category term="基础教程" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    <category term="环境搭建" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://unclevicky.github.io/rabbitBear/tags/hexo/"/>
    
    <category term="github" scheme="https://unclevicky.github.io/rabbitBear/tags/github/"/>
    
    <category term="博客" scheme="https://unclevicky.github.io/rabbitBear/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>【量化投资】05.读取csv文件保存到mysql数据库</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/03/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%845/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/03/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%845/</id>
    <published>2021-02-03T15:01:56.000Z</published>
    <updated>2021-02-03T15:31:44.415Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【老博客地址】"><a href="#【老博客地址】" class="headerlink" title="【老博客地址】"></a><strong>【老博客地址】</strong></h3><p>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/">【CSDN】博客主页</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111321871">【量化投资】00.资源篇——持续更新</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111300459">【量化投资】01.基本概念</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111326137">【量化投资】02.数据接口初探——excel读取新浪股票api数据</a><br>&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111472606">【量化投资】03.量化工程abu学习之量化基础（1/3）</a></p><h3 id="【目标】"><a href="#【目标】" class="headerlink" title="【目标】"></a><strong>【目标】</strong></h3><p>&emsp;&emsp;接上文，将<a href="https://unclevicky.github.io/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/">【量化投资】04.使用python爬取股票基础数据</a>中爬取的数据保存到mysql数据库中</p><h3 id="【最终效果】"><a href="#【最终效果】" class="headerlink" title="【最终效果】"></a><strong>【最终效果】</strong></h3><img src="/rabbitBear/2021/02/03/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%845/ts_stock_basics.png" class title="股票列表数据库Navicat截图"><h3 id="【准备工作】"><a href="#【准备工作】" class="headerlink" title="【准备工作】"></a><strong>【准备工作】</strong></h3><ul><li>安装mysql数据库（本地或docker方式都可以）</li><li>安装python操作mysql所需要的包<ul><li><code>pip install pymysql</code></li></ul></li><li>（选）安装Navicat客户端，用以查询数据库</li></ul><h3 id="【创建mysql数据库表】"><a href="#【创建mysql数据库表】" class="headerlink" title="【创建mysql数据库表】"></a><strong>【创建mysql数据库表】</strong></h3> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ts_stock_basics(code <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;代码&#x27;</span>,name <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;名称&#x27;</span>,industry <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;所属行业&#x27;</span>,area <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;地区&#x27;</span>,pe <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;市盈率&#x27;</span>,outstanding <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;流通股本(亿)&#x27;</span>,totals <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;总股本(亿)&#x27;</span>,totalAssets <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;总资产(万)&#x27;</span>,liquidAssets <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;流动资产&#x27;</span>,fixedAssets <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;固定资产&#x27;</span>,reserved <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;公积金&#x27;</span>,reservedPerShare <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股公积金&#x27;</span>,esp <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股收益&#x27;</span>,bvps <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股净资&#x27;</span>,pb <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;市净率&#x27;</span>,timeToMarket <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;上市日期&#x27;</span>,undp <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;未分利润&#x27;</span>,perundp <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;每股未分配&#x27;</span>,rev <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;收入同比(%)&#x27;</span>,profit <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;利润同比(%)&#x27;</span>,gpr <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;毛利率(%)&#x27;</span>,npr <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;净利润率(%)&#x27;</span>,holders <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;股东人数&#x27;</span>,<span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (code) ) COMMENT<span class="operator">=</span><span class="string">&#x27;股票列表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="【完整代码：读取csv文件，并插入到数据库】"><a href="#【完整代码：读取csv文件，并插入到数据库】" class="headerlink" title="【完整代码：读取csv文件，并插入到数据库】"></a><strong>【完整代码：读取csv文件，并插入到数据库】</strong></h3><p><strong>【重要】需要更改自己的数据库地址、用户名和密码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">MYSQL_HOST=<span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">MYSQL_USER=<span class="string">&#x27;root&#x27;</span></span><br><span class="line">MYSQL_PWD=<span class="string">&#x27;mariadb&#x27;</span></span><br><span class="line">MYSQL_DB=<span class="string">&#x27;stock_data&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立数据连接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conn</span>():</span></span><br><span class="line">    db = pymysql.connect(MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, port=<span class="number">3306</span>, charset=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> db</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insertTSB</span>():</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 读取csv文件</span></span><br><span class="line">    file = <span class="built_in">open</span>(<span class="string">&#x27;stock_info.csv&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    fileReader = csv.reader(file)</span><br><span class="line">    filedata = <span class="built_in">list</span>(fileReader) </span><br><span class="line">    db = conn()</span><br><span class="line">    c = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 有些为空的数据，csv自动变为-, 需要处理掉， 否则插入数据库会报错</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> filedata:</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(row)):</span><br><span class="line">            <span class="keyword">if</span> row[_] == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                row[_]=<span class="string">&#x27;\&#x27;\&#x27;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i,val <span class="keyword">in</span> <span class="built_in">enumerate</span>(filedata):</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0</span>: <span class="comment"># 跳过文件头</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># 组装插入语句</span></span><br><span class="line">        <span class="comment"># 股票代码 股票名称 行业 地区 pe 流通股本 总股本 总资产 流动资产 上市时间 每股未分配利润 利润同比 净利润率</span></span><br><span class="line">        sql = <span class="string">&quot;INSERT INTO ts_stock_basics(code, name, industry, area, pe, \</span></span><br><span class="line"><span class="string">        outstanding, totals, totalAssets, liquidAssets, timeToMarket, perundp, profit, npr) \</span></span><br><span class="line"><span class="string">       VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s )&quot;</span> % \</span><br><span class="line">       (<span class="built_in">str</span>(val[<span class="number">0</span>]).zfill(<span class="number">6</span>), <span class="string">&#x27;\&#x27;&#x27;</span>+val[<span class="number">1</span>]+<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>+val[<span class="number">20</span>]+<span class="string">&#x27;\&#x27;&#x27;</span>,  <span class="string">&#x27;\&#x27;&#x27;</span>+val[<span class="number">21</span>]+<span class="string">&#x27;\&#x27;&#x27;</span>, val[<span class="number">22</span>], val[<span class="number">15</span>], val[<span class="number">14</span>], val[<span class="number">18</span>], val[<span class="number">19</span>], val[<span class="number">29</span>], val[<span class="number">30</span>], val[<span class="number">26</span>], val[<span class="number">27</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 执行语句</span></span><br><span class="line">            c.execute(sql)</span><br><span class="line">            <span class="comment"># 提交</span></span><br><span class="line">            db.commit()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="comment"># 如果出错，把错误语句打印出来，方便分析</span></span><br><span class="line">            print(sql)</span><br><span class="line">            <span class="comment"># 如果出错需要回滚</span></span><br><span class="line">            db.rollback()</span><br><span class="line">    <span class="comment"># 一定不要忘了关闭数据库连接</span></span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有数据    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteTSB</span>():</span></span><br><span class="line">    db = conn()</span><br><span class="line">    <span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># SQL 删除语句</span></span><br><span class="line">    sql = <span class="string">&quot;DELETE FROM ts_stock_basics WHERE 1=1 &quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">       <span class="comment"># 执行SQL语句</span></span><br><span class="line">       cursor.execute(sql)</span><br><span class="line">       <span class="comment"># 提交修改</span></span><br><span class="line">       db.commit()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">       <span class="comment"># 发生错误时回滚</span></span><br><span class="line">       db.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    db.close()</span><br><span class="line">    </span><br><span class="line"><span class="comment">#deleteTSB() # 如果需要重新插入，用此方法删除数据库表内容</span></span><br><span class="line">insertTSB()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;【老博客地址】&quot;&gt;&lt;a href=&quot;#【老博客地址】&quot; class=&quot;headerlink&quot; title=&quot;【老博客地址】&quot;&gt;&lt;/a&gt;&lt;strong&gt;【老博客地址】&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://blog</summary>
      
    
    
    
    <category term="财富" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/"/>
    
    <category term="基础教程" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="技术工具" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="数据获取" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="技术" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="python" scheme="https://unclevicky.github.io/rabbitBear/tags/python/"/>
    
    <category term="mysql" scheme="https://unclevicky.github.io/rabbitBear/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【量化投资】04.使用python爬取股票基础数据</title>
    <link href="https://unclevicky.github.io/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/"/>
    <id>https://unclevicky.github.io/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/</id>
    <published>2021-02-01T13:34:02.000Z</published>
    <updated>2021-02-02T09:18:38.046Z</updated>
    
    <content type="html"><![CDATA[<h3 id="【老博客地址】"><a href="#【老博客地址】" class="headerlink" title="【老博客地址】"></a><strong>【老博客地址】</strong></h3><p>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/">【CSDN】博客主页</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111321871">【量化投资】00.资源篇——持续更新</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111300459">【量化投资】01.基本概念</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111326137">【量化投资】02.数据接口初探——excel读取新浪股票api数据</a><br>&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/MissYourKiss/article/details/111472606">【量化投资】03.量化工程abu学习之量化基础（1/3）</a></p><h3 id="【背景】"><a href="#【背景】" class="headerlink" title="【背景】"></a><strong>【背景】</strong></h3><p style="text-indent:2em">之前的文章里推荐了好几个量化投资程序获取数据的方法，但是后来发现大多都有了限制，包括某share都得用积分才能使用，积分的获取非常麻烦。求人不如靠己！所以就开始自己一点点的自己想办法获取数据，并存储到本地。</p><p style="text-indent:2em">本次的目标是从东方财富的官网页面上抓取股票的基本数据，内容如下:</p><ul><li>本期<ul><li>获取A股所有的股票列表和一些基本信息，并保存到cvs文件</li><li>获取各股票的一些详细信息，并保存到csv文件</li></ul></li><li>计划<ul><li>后续将数据进行结构化保存到数据库</li><li>后续改成多线程获取，加速爬取数据</li></ul></li></ul><h3 id="【最终效果】"><a href="#【最终效果】" class="headerlink" title="【最终效果】"></a><strong>【最终效果】</strong></h3><br><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_list_web.png" class title="股票清单和基本信息-网页"><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_list_csv.png" class title="股票清单和基本信息-csv"><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_info_web.png" class title="股票详细信息-网页"><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/stock_info_csv.png" class title="股票详细信息-csv"><h3 id="【代码】"><a href="#【代码】" class="headerlink" title="【代码】"></a><strong>【代码】</strong></h3><h4 id="获取所有A股股票清单"><a href="#获取所有A股股票清单" class="headerlink" title="获取所有A股股票清单"></a><strong>获取所有A股股票清单</strong></h4><h5 id="☆完整代码"><a href="#☆完整代码" class="headerlink" title="☆完整代码"></a><strong>☆完整代码</strong></h5><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;html.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(requests.get(url).text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 股票信息主页</span></span><br><span class="line"><span class="comment"># http://quote.eastmoney.com/center/gridlist.html#hs_a_board</span></span><br><span class="line"><span class="comment"># 沪深A股列表真实链接</span></span><br><span class="line">url = <span class="string">&quot;http://11.push2.eastmoney.com/api/qt/clist/get?cb=jQuery112405084455909086425_1610764452571&amp;pn=1&amp;pz=4400&amp;po=1&amp;np=1&amp;ut=bd1d9ddb04089700cf9c27f6f7426281&amp;fltt=2&amp;invt=2&amp;fid=f3&amp;fs=m:0+t:6,m:0+t:13,m:0+t:80,m:1+t:2,m:1+t:23&amp;fields=f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152&amp;_=1610764452635&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>():</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;html.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        all_contents = f.read()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 正则表达式，获取股票列表信息json串</span></span><br><span class="line">    re_cont = re.findall(<span class="string">&#x27;\\((.*?)\\);&#x27;</span>,all_contents,re.S)</span><br><span class="line">    js_cont = json.loads(re_cont[<span class="number">0</span>])</span><br><span class="line">    stock_list=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> js_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;diff&#x27;</span>]:</span><br><span class="line">        <span class="comment">#_stock=&#123;&#125;</span></span><br><span class="line">        <span class="comment">#_stock[&#x27;code&#x27;]=i[&#x27;f12&#x27;]</span></span><br><span class="line">        <span class="comment">#_stock[&#x27;name&#x27;]=i[&#x27;f14&#x27;]</span></span><br><span class="line">        <span class="comment">#_stock[&#x27;new_price&#x27;]=i[&#x27;f2&#x27;]</span></span><br><span class="line">        conten=[]  <span class="comment"># 存放单只股票信息</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f12&#x27;</span>]) <span class="comment"># 股票代码</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f14&#x27;</span>]) <span class="comment"># 股票名称</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f2&#x27;</span>]) <span class="comment"># 最新价</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f3&#x27;</span>]) <span class="comment"># 涨跌幅</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f4&#x27;</span>]) <span class="comment"># 涨跌额</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f5&#x27;</span>]) <span class="comment"># 成交量（手）</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f6&#x27;</span>]) <span class="comment"># 成交额</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f7&#x27;</span>]) <span class="comment"># 振幅</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f15&#x27;</span>]) <span class="comment"># 最高</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f16&#x27;</span>]) <span class="comment"># 最低</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f17&#x27;</span>]) <span class="comment"># 今开</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f18&#x27;</span>]) <span class="comment"># 昨收</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f10&#x27;</span>]) <span class="comment"># 量比</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f8&#x27;</span>]) <span class="comment"># 换手率</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f9&#x27;</span>]) <span class="comment"># 市盈率（动态）</span></span><br><span class="line">        conten.append(i[<span class="string">&#x27;f23&#x27;</span>]) <span class="comment"># 市净率</span></span><br><span class="line">        stock_list.append(conten)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;stock.csv&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 写入表头</span></span><br><span class="line">        n=<span class="number">0</span></span><br><span class="line">        single=(<span class="built_in">str</span>(n)+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;股票代码&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;股票名称&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;最新价&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;涨跌幅&#x27;</span>+<span class="string">&#x27;,&#x27;</span></span><br><span class="line">                +<span class="string">&#x27;涨跌额&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;成交量（手）&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;成交额（亿）&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;振幅&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;最高&#x27;</span>+<span class="string">&#x27;,&#x27;</span></span><br><span class="line">                +<span class="string">&#x27;最低&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;今开&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;昨收&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;量比&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;换手率&#x27;</span>+<span class="string">&#x27;,&#x27;</span></span><br><span class="line">                +<span class="string">&#x27;市盈率（动态）&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;市净率&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f.write(single)</span><br><span class="line">        <span class="comment"># 写入股票数据</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> stock_list:</span><br><span class="line">            n+=<span class="number">1</span></span><br><span class="line">            single = <span class="built_in">str</span>(n)</span><br><span class="line">            <span class="keyword">for</span> val <span class="keyword">in</span> _ :</span><br><span class="line">                single=single+<span class="string">&#x27;,&#x27;</span>+<span class="built_in">str</span>(val)</span><br><span class="line">            single=single+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">            f.write(single)</span><br><span class="line"></span><br><span class="line">get_html(url)</span><br><span class="line">read_file()</span><br></pre></td></tr></table></figure></code></pre><h5 id="☆代码解读"><a href="#☆代码解读" class="headerlink" title="☆代码解读"></a><strong>☆代码解读</strong></h5><ol><li>获取返回股票列表信息的<strong>真实连接</strong></li></ol><ul><li>打开东方财富的 <a href="http://quote.eastmoney.com/center/gridlist.html#hs_a_board">主页</a> ，获取返回值的html，查看源码，<strong>发现其页面里面没有股票信息</strong>,说明是通过生成页面框架，然后动态加载的。</li><li>使用<strong>fiddler或者chrome自带功能</strong>（可以参考我之前的相关文章）,点击“沪深A股”或者点击“翻页”，从fiddler捕获的连接或chrome的<strong>开发者工具（F12）</strong>的Network中找到最新的几个连接，找到真实的连接.<img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/get_sl_real_url.png" class title="chrome的F12查看Network信息"></li><li>分析请求request的header请求，发现关键信息，pn=3，pz=20，猜想是第3页和每页20个的请求参数，其他f1,f2…应该是需要请求哪些数据的参数。那么我们把参数改成pn=1&amp;pz=5000，也就是一次性将A股的4000多只股票全部获取到。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Request URL: http://56.push2.eastmoney.com/api/qt/clist/get?cb=jQuery1124034105331658665383_1612251280345&amp;pn=3&amp;pz=20&amp;po=1&amp;np=1&amp;ut=bd1d9ddb04089700cf9c27f6f7426281&amp;fltt=2&amp;invt=2&amp;fid=f3&amp;fs=m:0+t:6,m:0+t:13,m:0+t:80,m:1+t:2,m:1+t:23&amp;fields=f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f12,f13,f14,f15,f16,f17,f18,f20,f21,f23,f24,f25,f22,f11,f62,f128,f136,f115,f152&amp;_=1612251280452</span><br><span class="line">Request Method: GET</span><br><span class="line">Status Code: <span class="number">200</span> OK</span><br><span class="line">Remote Address: <span class="number">101.89</span><span class="number">.224</span><span class="number">.78</span>:<span class="number">80</span></span><br><span class="line">Referrer Policy: strict-origin-when-cross-origin</span><br></pre></td></tr></table></figure><img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/sl_real_url_req.png" class title="分析请求信息"></li></ul><ol start="2"><li>访问真实连接，并对返回值进行解析</li></ol><ul><li>分析返回reponse，发现其是一个非常规整json字符串，外面包了一个小括弧，那就非常好办了，通过正则表达式把json字符串取出来，然后使用json包进行解析即可。</li><li>通过页面对比，发现每个返回字段代表的中文含义，例如：f12是股票代码<img src="/rabbitBear/2021/02/01/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%844/sl_real_url_rsp.png" class title="分析返回信息"></li></ul><h4 id="获取每只股票信息信息"><a href="#获取每只股票信息信息" class="headerlink" title="获取每只股票信息信息"></a><strong>获取每只股票信息信息</strong></h4><h5 id="☆完整代码-1"><a href="#☆完整代码-1" class="headerlink" title="☆完整代码"></a><strong>☆完整代码</strong></h5><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取文件,拼接地址</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;info_fin.csv&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27;股票代码&#x27;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;股票名称&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;最新价&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;最高价&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;最低价&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;今开&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总手&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;金额&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;外盘&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;量比&quot;</span></span><br><span class="line">    +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;涨停&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;跌停&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;收益（新）&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;昨收&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总股本&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;流通股&quot;</span></span><br><span class="line">        +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;净利润&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;每股净资产&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总值&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;流值&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;板块&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;地区&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;pe&quot;</span></span><br><span class="line">        +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;ROE&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总营收&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;总营收同比&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;净利润同比&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;净利率&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;负债率&quot;</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;上市时间&quot;</span></span><br><span class="line">        +<span class="string">&quot;,&quot;</span>+<span class="string">&quot;每股未分配利润&quot;</span>+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;stock.csv&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">fileReader = csv.reader(file)</span><br><span class="line">filedata = <span class="built_in">list</span>(fileReader) </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _,i <span class="keyword">in</span> <span class="built_in">enumerate</span>(filedata):</span><br><span class="line">    <span class="keyword">if</span> _==<span class="number">0</span>: <span class="comment"># 跳过文件头</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">1</span>].startswith(<span class="string">&#x27;6&#x27;</span>):</span><br><span class="line">        addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=1.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=0.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    re_cont = re.findall(<span class="string">&quot;\\((.*?)\\);&quot;</span>,requests.get(addr).text,re.S)</span><br><span class="line">    je_cont = json.loads(re_cont[<span class="number">0</span>])</span><br><span class="line">    <span class="comment">#fin = &#123;&#125;</span></span><br><span class="line">    <span class="comment">#fin[&#x27;code&#x27;] = je_cont[&#x27;data&#x27;][&#x27;f57&#x27;]</span></span><br><span class="line">    <span class="comment">#fin[&#x27;name&#x27;] = je_cont[&#x27;data&#x27;][&#x27;f58&#x27;]</span></span><br><span class="line">    work = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#print(str(je_cont[&#x27;data&#x27;][&#x27;f43&#x27;]))</span></span><br><span class="line">    <span class="comment">#print(&#x27;12&#x27;)</span></span><br><span class="line">    work = (<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f57&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f58&#x27;</span>])+<span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f43&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f44&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f45&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f46&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f47&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f48&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f49&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f50&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f51&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f52&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f55&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f60&#x27;</span>])+ <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f84&#x27;</span>])+<span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f85&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f105&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f92&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f116&#x27;</span>])+<span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f117&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f127&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f128&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f162&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f173&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f183&#x27;</span>])+<span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f184&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f185&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f187&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f188&#x27;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f189&#x27;</span>])</span><br><span class="line">    + <span class="string">&quot;,&quot;</span>+ <span class="built_in">str</span>(je_cont[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;f190&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    work = work+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    f.write(work) </span><br></pre></td></tr></table></figure></code></pre><h5 id="☆代码解读-1"><a href="#☆代码解读-1" class="headerlink" title="☆代码解读"></a><strong>☆代码解读</strong></h5><ol><li>通过点击详情页面，找到每只股票详细信息访问的连接的规律<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://quote.eastmoney.com/sz******.html</span><br><span class="line">http://quote.eastmoney.com/sh******.html</span><br></pre></td></tr></table></figure></li><li>同样的方法，发现所有的股票详细数据，都是动态加载的。使用<strong>fiddler或者chrome自带功能</strong>，获取真实连接。</li><li>分析规律组装真实连接，“6”开头的请求参数为“1.股票代码”，其他是“0.股票代码”<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> i[<span class="number">1</span>].startswith(<span class="string">&#x27;6&#x27;</span>):</span><br><span class="line">    addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=1.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    addr = <span class="string">&quot;http://push2.eastmoney.com/api/qt/stock/get?ut=fa5fd1943c7b386f172d6893dbfba10b&amp;invt=2&amp;fltt=2&amp;fields=f43,f57,f58,f169,f170,f46,f44,f51,f168,f47,f164,f163,f116,f60,f45,f52,f50,f48,f167,f117,f71,f161,f49,f530,f135,f136,f137,f138,f139,f141,f142,f144,f145,f147,f148,f140,f143,f146,f149,f55,f62,f162,f92,f173,f104,f105,f84,f85,f183,f184,f185,f186,f187,f188,f189,f190,f191,f192,f107,f111,f86,f177,f78,f110,f262,f263,f264,f267,f268,f250,f251,f252,f253,f254,f255,f256,f257,f258,f266,f269,f270,f271,f273,f274,f275,f127,f199,f128,f193,f196,f194,f195,f197,f80,f280,f281,f282,f284,f285,f286,f287,f292&amp;secid=0.&quot;</span> + i[<span class="number">1</span>] + <span class="string">&quot;&amp;cb=jQuery11240660569033297794_1610790254977&amp;_=1610790254978&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>解析返回reponse，同样的正则表达式+json解析，然后通过页面对比，发现每个返回字段对比的中文含义，例如：f57代表股票代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">最新价:f43</span><br><span class="line">最高:f44</span><br><span class="line">最低:f45</span><br><span class="line">今开:f46</span><br><span class="line">总手:f47</span><br><span class="line">金额:f48</span><br><span class="line">外盘:f49</span><br><span class="line">量比:f50</span><br><span class="line">涨停:f51</span><br><span class="line">跌停:f52</span><br><span class="line">收益（三）: f55</span><br><span class="line">股票代码:f57</span><br><span class="line">股票名称:f58</span><br><span class="line">昨收:f60</span><br><span class="line">总股本:f84</span><br><span class="line">流通股:f85</span><br><span class="line">净利润:f105</span><br><span class="line">每股净资产:f92</span><br><span class="line">总值:f116</span><br><span class="line">流值:f117</span><br><span class="line">板块：f127</span><br><span class="line">地区：f128</span><br><span class="line">pe（动）:f162</span><br><span class="line">ROE:f173</span><br><span class="line">总营收:f183</span><br><span class="line">总营收同比:f184</span><br><span class="line">净利润同比:f185</span><br><span class="line">净利率:f187</span><br><span class="line">负债率:f188</span><br><span class="line">上市时间:f189</span><br><span class="line">每股未分配利润:f190</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;【老博客地址】&quot;&gt;&lt;a href=&quot;#【老博客地址】&quot; class=&quot;headerlink&quot; title=&quot;【老博客地址】&quot;&gt;&lt;/a&gt;&lt;strong&gt;【老博客地址】&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://blog</summary>
      
    
    
    
    <category term="财富" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/"/>
    
    <category term="基础教程" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="技术工具" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="https://unclevicky.github.io/rabbitBear/categories/%E8%B4%A2%E5%AF%8C/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/%E6%8A%80%E6%9C%AF%E5%B7%A5%E5%85%B7/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/categories/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    
    <category term="量化投资" scheme="https://unclevicky.github.io/rabbitBear/tags/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84/"/>
    
    <category term="数据获取" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="技术" scheme="https://unclevicky.github.io/rabbitBear/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="python" scheme="https://unclevicky.github.io/rabbitBear/tags/python/"/>
    
  </entry>
  
</feed>
